// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200603004732_ProductValue")]
    partial class ProductValue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("caseSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("expectedFloor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("expectedInv")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("onSale")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("organic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("par")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("productActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("retailPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("shrink")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("soldBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "suck it once",
                            caseSize = 0,
                            expectedFloor = 0,
                            expectedInv = 0,
                            onSale = false,
                            organic = false,
                            par = 0,
                            productActive = false,
                            retailPrice = 0,
                            shrink = 0,
                            sold = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "suck it twice",
                            caseSize = 0,
                            expectedFloor = 0,
                            expectedInv = 0,
                            onSale = false,
                            organic = false,
                            par = 0,
                            productActive = false,
                            retailPrice = 0,
                            shrink = 0,
                            sold = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "suck it thrice",
                            caseSize = 0,
                            expectedFloor = 0,
                            expectedInv = 0,
                            onSale = false,
                            organic = false,
                            par = 0,
                            productActive = false,
                            retailPrice = 0,
                            shrink = 0,
                            sold = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "suck it four",
                            caseSize = 0,
                            expectedFloor = 0,
                            expectedInv = 0,
                            onSale = false,
                            organic = false,
                            par = 0,
                            productActive = false,
                            retailPrice = 0,
                            shrink = 0,
                            sold = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
